#!/bin/bash

NVIM_SERVER_PORT="42137"

# Map of hostnames to MAC addresses
declare -A HOSTNAME_TO_MAC=(
    ["workstation"]="04:7C:16:F6:D9:07"
)

function command_wol()
{
    if [ $# -ne 1 ];
    then
        0>&2 echo "error: command 'wol' expects 1 argument"
        exit 1
    fi

    HOSTNAME=$1

    if [[ -z "${HOSTNAME_TO_MAC[$HOSTNAME]}" ]];
    then
        echo "error: unknown hostname '$HOSTNAME'"
        exit 1
    fi

    WOL="wol --verbose ${HOSTNAME_TO_MAC[$HOSTNAME]}"

    if ip link | grep "zbox-wg";
    then
        # wake remotely
        ssh zbox "${WOL}"
    else
        # wake from LAN
        ${WOL}
    fi
}

function command_nvim()
{
    if [ $# -ne 1 ];
    then
        0>&2 echo "error: command 'nvim' expects 1 argument"
        exit 1
    fi

    NEOVIDE="neovide --fork --server $1:${NVIM_SERVER_PORT}"
    echo "${NEOVIDE}"
    ${NEOVIDE}
}

function command_infp_tunnel()
{
    if [ $# -ne 1 ];
    then
        0>&2 echo "error: command 'infp' expects 1 argument"
        exit 1
    fi

    HOSTNAME=$1

    set -x
    # Forward ports and tunnel UDP over TCP.  Fork to background.
    ssh -L 7373:localhost:7373 -L 5513:localhost:5513 -L 4004:localhost:4004 -L 22993:localhost:22993 -L 5514:localhost:5514 ${HOSTNAME} "socat TCP-LISTEN:5514,reuseaddr,fork UDP:localhost:5513" &
    PID_SSH=$!

    # Send UDP over TCP
    socat -T15 UDP-LISTEN:5513,reuseaddr,fork TCP:localhost:5514

    # Kill socat on remote
    kill ${PID_SSH}
    ssh ${HOSTNAME} "pkill socat"
    set +x
}


if [ $# -eq 0 ];
then
    >&2 echo "$0: expected a command"
    exit 1
fi

COMMAND=$1
shift

case ${COMMAND} in
    wol)
        command_wol $@
        ;;
    nvim)
        command_nvim $@
        ;;
    infp)
        command_infp_tunnel $@
        ;;
    *)
        >&2 echo "$0: unknown command '${COMMAND}'"
        exit 1
        ;;
esac
